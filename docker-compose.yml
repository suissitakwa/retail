version: '3.8'
services:
  retail-app:
    build: . # Builds using the Dockerfile above
    container_name: retail-spring-app
    ports:
      - "8080:8080"
    depends_on:
      - retail-db
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://retail-db:5432/retail_db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    ports:
        - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1


  retail-db:
    image: postgres:14-alpine
    container_name: retail-postgres-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: retail_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus
    ports:
      - "9090:9090" # Prometheus web UI
    volumes:
      # Mount the configuration file we just created
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    depends_on:
      - retail-app

  grafana:
      image: grafana/grafana:10.0.0
      container_name: grafana
      ports:
        - "3000:3000" # Grafana web UI
      environment:
        # Skip initial login requirements for ease of use
        - GF_SECURITY_ALLOW_EMBEDDING=true
      depends_on:
        - prometheus

volumes:
  postgres_data: